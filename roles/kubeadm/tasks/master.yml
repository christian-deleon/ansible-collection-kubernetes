---
- name: Configure controlplane master
  block:
  - name: Resetting Kubernetes component
    ansible.builtin.command: "kubeadm reset --force --cri-socket=unix:///var/run/cri-dockerd.sock"
    register: reset_cluster
    changed_when: false

  - name: Initializing Kubernetes cluster
    ansible.builtin.command: |
      kubeadm init \
        --kubernetes-version=v{{ kubernetes_version }} \
        --pod-network-cidr={{ pod_network_cidr }} \
        --control-plane-endpoint={{ kube_apiserver_ip }}:6443 \
        --upload-certs \
        --cri-socket=unix:///var/run/cri-dockerd.sock
    when: reset_cluster is succeeded
    register: init_cluster

  - name: Make sure kubelet root directory exists
    ansible.builtin.file:
      path: "{{ kubelet_root_dir }}"
      state: directory
      mode: '0755'

  - name: Edit 10-kubeadm.conf
    ansible.builtin.lineinfile:
      path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      regexp: '^ExecStart='
      line: 'ExecStart=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS --container-runtime-endpoint=unix:///var/run/cri-dockerd.sock'

  when: inventory_hostname in groups['controlplane_master']

- name: Configure controlplane slave
  block:
  - name: Set the controlplane master ip
    ansible.builtin.set_fact:
      controlplane_master_ip: "{{ hostvars[groups['controlplane_master'][0]].guest.ipAddress }}"

  - name: Get join command
    ansible.builtin.command: kubeadm token create --print-join-command
    register: join_command
    delegate_to: "{{ controlplane_master_ip }}"
    when: true
    run_once: true

  - name: Get certificate key
    ansible.builtin.command: kubeadm init phase upload-certs --upload-certs --config=/tmp/kubeadm-config.yaml
    register: certificate_key_output
    delegate_to: "{{ controlplane_master_ip }}"
    when: true
    run_once: true

  - name: Set certificate key
    ansible.builtin.set_fact:
      certificate_key: "{{ certificate_key_output.stdout_lines[-1] }}"

  - name: Add certificate key to join command
    ansible.builtin.set_fact:
      join_command: "{{ join_command.stdout }} --certificate-key {{ certificate_key }}"

  - name: Run join command
    ansible.builtin.command: "{{ join_command }} --control-plane --cri-socket=unix:///var/run/cri-dockerd.sock"
    when: true

  when: inventory_hostname in groups['controlplane_slave']
